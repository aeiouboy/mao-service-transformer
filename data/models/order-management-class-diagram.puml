@startuml Order Management System Class Diagram

package "Order Management System" {
  
  class orders {
    + id: SERIAL <<PRIMARY KEY>>
    + order_id: VARCHAR(255) <<UNIQUE, INDEX>>
		+ short_order_number: VARCHAR(50) <<INDEX>>
    --
    + bu: VARCHAR(10)
    + captured_date: TIMESTAMP
    + currency_code: VARCHAR(3)
    + customer_id: VARCHAR(255)
    + customer_email: VARCHAR(255)
    + do_not_release_before: TIMESTAMP
    + customer_first_name: VARCHAR(255)
    + customer_last_name: VARCHAR(255)
    + customer_phone: VARCHAR(50)
    + customer_type_id: VARCHAR(100)
    + is_on_hold: BOOLEAN
    + order_locale: VARCHAR(10)
    + cancel_allowed: BOOLEAN
    + alternate_order_id: VARCHAR(255)
    + org_id: VARCHAR(10)
    + selling_channel: VARCHAR(100)
		+ order_status: VARCHAR(50) <<INDEX>>
		+ fulfillment_status: VARCHAR(50) <<INDEX>>
		+ payment_status: VARCHAR(50) <<INDEX>>
		
    --
    + doc_type: JSONB
    + order_hold: JSONB
    + order_actions: JSONB
    + order_extension1: JSONB
    + order_charge_detail: JSONB
    + order_tax_detail: JSONB
    + order_type: JSONB
    + order_note: JSONB
		+ change_log: JSONB
    --
		+ parent_id: INT(255)
		+ is_active: BOOLEAN <<DEFAULT true>>
		--
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class order_lines {
    + id: SERIAL <<PRIMARY KEY>>
    + order_id: VARCHAR(255) <<INDEX>>
    + order_line_id: VARCHAR(50)
    --
    + item_id: VARCHAR(255)
    + is_gift: BOOLEAN
    + is_tax_included: BOOLEAN
    + promised_delivery_date: TIMESTAMP
    + uom: VARCHAR(10)
    + quantity: DECIMAL(10,2)
    + unit_price: DECIMAL(10,2)
    + original_unit_price: DECIMAL(10,2)
    + shipping_method_id: VARCHAR(100)
    + release_group_id: VARCHAR(255)
		+ fulfillment_status: VARCHAR(50) <<INDEX>>
    --
    + delivery_method: JSONB
    + order_line_note: JSONB
    + order_line_charge_detail: JSONB
    + order_line_tax_detail: JSONB
    + order_line_promising_info: JSONB
    + ship_to_address: JSONB
    + order_line_extension1: JSONB
		+ order_line_promising_info: JSONB
		+ change_log: JSONB
    --
		+ parent_id: INT(255)
		+ is_active: BOOLEAN <<DEFAULT true>>
		--
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class payments {
    + id: SERIAL <<PRIMARY KEY>>
    + order_id: VARCHAR(255) <<INDEX>>
    --
    + processing_mode: JSONB
    --
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class payment_methods {
    + id: SERIAL <<PRIMARY KEY>>
    + payment_id: INTEGER
    + order_id: VARCHAR(255) <<INDEX>>
    --
    + payment_method_id: VARCHAR(255)
    + amount: DECIMAL(10,2)
    + currency_code: VARCHAR(3)
    + gateway_id: VARCHAR(100)
    + current_settled_amount: DECIMAL(10,2)
    + is_copied: BOOLEAN
    + is_modifiable: BOOLEAN
    + is_suspended: BOOLEAN
    + is_voided: BOOLEAN
    --
    + payment_type: JSONB
    + billing_address: JSONB
    --
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class payment_transactions {
    + id: SERIAL <<PRIMARY KEY>>
    + payment_method_id: INTEGER
    + order_id: VARCHAR(255) <<INDEX>>
    --
    + payment_transaction_id: VARCHAR(255)
    + is_activation: BOOLEAN
    + is_active: BOOLEAN
    + is_copied: BOOLEAN
    + is_valid_for_refund: BOOLEAN
    + reconciliation_id: VARCHAR(255)
    + request_id: VARCHAR(255)
    + request_token: VARCHAR(255)
    + processed_amount: DECIMAL(10,2)
    + transaction_date: TIMESTAMP
    + requested_amount: DECIMAL(10,2)
    --
    + payment_response_status: JSONB
    + status: JSONB
    + transmission_status: JSONB
    + transaction_type: JSONB
    --
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class quantity_details {
    + id: SERIAL <<PRIMARY KEY>>
    + order_line_id: INTEGER
    + order_id: VARCHAR(255)
    --
    + quantity_detail_id: VARCHAR(255)
    + status_id: VARCHAR(50)
    + process: VARCHAR(100)
    + item_id: VARCHAR(255)
    + quantity: INTEGER
    + uom: VARCHAR(20)
    + reason: VARCHAR(255)
    + reason_type: VARCHAR(100)
    + substitution_ratio: DECIMAL(10,3)
    + substitution_type: VARCHAR(100)
    + web_url: VARCHAR(500)
    + org_id: VARCHAR(50)
    --
    + status: JSONB
    + change_log: JSONB
    --
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class allocations {
  + id: SERIAL <<PRIMARY KEY>>
  + order_line_id: INTEGER
  + order_id: VARCHAR(255)
  --
  + allocation_id: VARCHAR(255)
  + allocation_type: VARCHAR(50)
  + status_id: VARCHAR(50)
  + process: VARCHAR(100)
  + item_id: VARCHAR(255)
  + quantity: INTEGER
  + uom: VARCHAR(20)
  + is_virtual: BOOLEAN
  + ship_from_location_id: VARCHAR(100)
  + ship_to_location_id: VARCHAR(100)
  + ship_via_id: VARCHAR(100)
  + carrier_code: VARCHAR(100)
  + earliest_delivery_date: TIMESTAMP
  + earliest_ship_date: TIMESTAMP
  + committed_delivery_date: TIMESTAMP
  + committed_ship_date: TIMESTAMP
  + latest_ship_date: TIMESTAMP
  + latest_release_date: TIMESTAMP
  + allocated_on: TIMESTAMP
  + batch_number: VARCHAR(100)
  + reservation_request_id: VARCHAR(255)
  + reservation_request_detail_id: VARCHAR(255)
  + org_id: VARCHAR(50)
  + country_of_origin: VARCHAR(50)
  + inventory_segment_id: VARCHAR(100)
  + inventory_type_id: VARCHAR(100)
  + substitution_type_id: VARCHAR(100)
  + allocation_dependency_id: VARCHAR(100)
  + group_id: VARCHAR(100)
  + product_status_id: VARCHAR(100)
  + asn_id: VARCHAR(100)
  + asn_detail_id: VARCHAR(100)
  --
  + extended: JSONB
  --
  + created_at: TIMESTAMP
  + updated_at: TIMESTAMP
  + created_by: VARCHAR(100)
  + updated_by: VARCHAR(100)
  }

  class releases {
    + id: SERIAL <<PRIMARY KEY>>
    + order_id: VARCHAR(255)
    --
    + release_id: VARCHAR(255)
    + release_number: VARCHAR(100)
    + release_status: VARCHAR(50)
    + release_type: VARCHAR(50)
    + release_date: TIMESTAMP
    + expected_ship_date: TIMESTAMP
    + actual_ship_date: TIMESTAMP
    + warehouse_id: VARCHAR(100)
    + carrier_id: VARCHAR(100)
    + tracking_number: VARCHAR(200)
    --
    + shipping_info: JSONB
    + carrier_details: JSONB
    + release_metadata: JSONB
    --
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class release_lines {
    + id: SERIAL <<PRIMARY KEY>>
    + release_id: INTEGER
    + order_line_id: INTEGER
    + order_id: VARCHAR(255)
    --
    + release_line_id: VARCHAR(255)
    + item_id: VARCHAR(255)
    + location_id: VARCHAR(100)
    + warehouse_id: VARCHAR(100)
    + quantity: INTEGER
    + picked_quantity: INTEGER
    + packed_quantity: INTEGER
    + shipped_quantity: INTEGER
    + line_status: VARCHAR(50)
    --
    + item_details: JSONB
    + fulfillment_details: JSONB
    + location_info: JSONB
    --
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class releases {
    + id: SERIAL <<PRIMARY KEY>>
    + order_id: VARCHAR(255)
    --
    + release_id: VARCHAR(255)
    + release_number: VARCHAR(100)
    + process: VARCHAR(100)
    + org_id: VARCHAR(50)
    + status_id: VARCHAR(50)
    + release_date: TIMESTAMP
    + expected_ship_date: TIMESTAMP
    + actual_ship_date: TIMESTAMP
    + warehouse_id: VARCHAR(100)
    + carrier_code: VARCHAR(100)
    + tracking_number: VARCHAR(200)
    + ship_from_location_id: VARCHAR(100)
    + ship_to_location_id: VARCHAR(100)
    + ship_via_id: VARCHAR(100)
    + earliest_delivery_date: TIMESTAMP
    + earliest_ship_date: TIMESTAMP
    + committed_delivery_date: TIMESTAMP
    + committed_ship_date: TIMESTAMP
    + latest_ship_date: TIMESTAMP
    + latest_release_date: TIMESTAMP
    + allocated_on: TIMESTAMP
    + quantity: INTEGER
    + uom: VARCHAR(20)
    + is_virtual: BOOLEAN
    + batch_number: VARCHAR(100)
    + reservation_request_id: VARCHAR(255)
    + reservation_request_detail_id: VARCHAR(255)
    + country_of_origin: VARCHAR(50)
    + inventory_segment_id: VARCHAR(100)
    + inventory_type_id: VARCHAR(100)
    + substitution_type_id: VARCHAR(100)
    + substitution_ratio: DECIMAL(10,3)
    + allocation_dependency_id: VARCHAR(100)
    + group_id: VARCHAR(100)
    + product_status_id: VARCHAR(100)
    + asn_id: VARCHAR(100)
    + asn_detail_id: VARCHAR(100)
    + po_id: VARCHAR(100)
    + po_detail_id: VARCHAR(100)
    + service_level_code: VARCHAR(50)
    + allocation_type: VARCHAR(50)
    --
    + status: JSONB
    + inventory_attributes: JSONB
    + extended: JSONB
    --
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  class release_lines {
    + id: SERIAL <<PRIMARY KEY>>
    + release_id: INTEGER
    + order_line_id: INTEGER
    + order_id: VARCHAR(255)
    --
    + release_line_id: VARCHAR(255)
    + item_id: VARCHAR(255)
    + process: VARCHAR(100)
    + org_id: VARCHAR(50)
    + status_id: VARCHAR(50)
    + quantity: INTEGER
    + uom: VARCHAR(20)
    + reason: VARCHAR(255)
    + reason_type: VARCHAR(100)
    + substitution_ratio: DECIMAL(10,3)
    + substitution_type: VARCHAR(100)
    + web_url: VARCHAR(500)
    + location_id: VARCHAR(100)
    + warehouse_id: VARCHAR(100)
    + picked_quantity: INTEGER
    + packed_quantity: INTEGER
    + shipped_quantity: INTEGER
    + line_status: VARCHAR(50)
    + ship_from_location_id: VARCHAR(100)
    + ship_to_location_id: VARCHAR(100)
    + ship_via_id: VARCHAR(100)
    + carrier_code: VARCHAR(100)
    + earliest_delivery_date: TIMESTAMP
    + earliest_ship_date: TIMESTAMP
    + committed_delivery_date: TIMESTAMP
    + committed_ship_date: TIMESTAMP
    + latest_ship_date: TIMESTAMP
    + latest_release_date: TIMESTAMP
    + allocated_on: TIMESTAMP
    + batch_number: VARCHAR(100)
    + reservation_request_id: VARCHAR(255)
    + reservation_request_detail_id: VARCHAR(255)
    + country_of_origin: VARCHAR(50)
    + inventory_segment_id: VARCHAR(100)
    + inventory_type_id: VARCHAR(100)
    + substitution_type_id: VARCHAR(100)
    + allocation_dependency_id: VARCHAR(100)
    + group_id: VARCHAR(100)
    + product_status_id: VARCHAR(100)
    + asn_id: VARCHAR(100)
    + asn_detail_id: VARCHAR(100)
    + po_id: VARCHAR(100)
    + po_detail_id: VARCHAR(100)
    + service_level_code: VARCHAR(50)
    + allocation_type: VARCHAR(50)
    + is_virtual: BOOLEAN
    --
    + status: JSONB <<JSONB_COLOR>>
    + inventory_attributes: JSONB
    + change_log: JSONB
    + extended: JSONB
    --
    + created_at: TIMESTAMP
    + updated_at: TIMESTAMP
    + created_by: VARCHAR(100)
    + updated_by: VARCHAR(100)
  }

  note top of orders : Main order table with JSONB fields for complex nested data
  note top of order_lines : Normalized OrderLine array from JSON payload  
  note top of payments : Payment root level from JSON payload
  note top of payment_methods : PaymentMethod array from Payment object
  note top of payment_transactions : PaymentTransaction array from PaymentMethod
  note top of quantity_details : QuantityDetail array from OrderLine object
  note top of allocations : Allocation array from OrderLine object
  note top of releases : Release array from fulfillment workflow
  note top of release_lines : ReleaseLine array from Release object

  ' Relationships (Logical, no FK constraints)
  orders ||--o{ order_lines : "order_id (indexed)"
  orders ||--o{ payments : "order_id (indexed)"
  orders ||--o{ releases : "order_id (indexed)"
  payments ||--o{ payment_methods : "payment_id + order_id"
  payment_methods ||--o{ payment_transactions : "payment_method_id + order_id"
  order_lines ||--o{ quantity_details : "order_line_id + order_id"
  order_lines ||--o{ allocations : "order_line_id + order_id"
  releases ||--o{ release_lines : "release_id + order_id"

}

package "Database Indexes" {
  class indexes <<INDEX_COLOR>> {
    + orders.order_id (UNIQUE)
    + order_lines.order_id (BTREE)
    + order_lines.item_id (BTREE)
    + payments.order_id (BTREE)
    + payment_methods.order_id (BTREE)
    + payment_methods.payment_method_id (BTREE)
    + payment_transactions.order_id (BTREE)
    + payment_transactions.payment_transaction_id (BTREE)
    + quantity_details.order_id (BTREE)
    + quantity_details.order_line_id (BTREE)
    + quantity_details.quantity_detail_id (BTREE)
    + allocations.order_id (BTREE)
    + allocations.order_line_id (BTREE)
    + allocations.allocation_id (BTREE)
    + releases.order_id (BTREE)
    + releases.release_id (BTREE)
    + releases.warehouse_id (BTREE)
    + release_lines.order_id (BTREE)
    + release_lines.release_id (BTREE)
    + release_lines.order_line_id (BTREE)
  }
}

@enduml
